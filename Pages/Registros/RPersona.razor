
@page "/Personas"


@using BLL
@using Models
@using Blazored.Toast
@using Blazored.Toast.Services

@inject IToastService toast

<EditForm Model="Persona" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="card" style="align-self:center">

        <div class="card-header" style="background-color: #79CAFF; text-align: center">
            <h3>Registro de Personas</h3>
        </div>


        <div class="card-body">
            <div class="container">
                <div class="row d-flex justify-content-center">
                    <form>
                        @*PersonaId*@
                        <div class="form-row">
                            <div class="col">
                                <div class="form-inline">
                                    <label><strong>Id</strong></label>
                                    <hr/>
                                    <div class="input-group">
                                        <InputNumber @bind-Value="Persona.PersonaId" class="form-control" size=40 style="width:300px" />
                                        <div class="input-group-append">
                                            <button type="button" class="btn btn-toolbar input-group-text" @onclick="Buscar"><span class="oi oi-magnifying-glass mr-2"></span>Buscar</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <br />

                        @*Nombre*@
                        <div class="form-row">
                            <div class="col">
                                <div class="form-inline">
                                    <label><strong>Nombres</strong></label>
                                    <hr />
                                    <div class="input-group">
                                        <InputText required @bind-Value="Persona.Nombres" class="form-control" size=40 style="width:400px" />
                                    </div>
                                </div>
                            </div>
                        </div>

                        <br />

                        @*Telefono*@
                        <div class="form-row">
                            <div class="col">
                                <div class="form-inline">
                                    <label><strong>Teléfono</strong></label>
                                    <hr />
                                    <div class="input-group">
                                        <InputText placeholder="Ej: (000)000-0000" required minlength="10" maxlength="10" @bind-Value="Persona.Telefono" class="form-control" size=40 style="width:400px" />
                                    </div>
                                </div>
                            </div>
                        </div>

                        <br />

                        @*Cedula*@
                        <div class="form-row">
                            <div class="col">
                                <div class="form-inline">
                                    <label><strong>Cédula</strong></label>
                                    <hr />
                                    <div class="input-group">
                                        <InputText placeholder="Ej: 000-0000000-0" required minlength="11" maxlength="11" @bind-Value="Persona.Cedula" class="form-control" size=40 style="width:400px"/>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <br />

                        @*Dirección*@
                        <div class="form-row">
                            <div class="col">
                                <div class="form-inline">
                                    <label><strong>Dirección</strong></label>
                                    <hr />
                                    <div class="input-group">
                                        <InputText required @bind-Value="Persona.Direccion" class="form-control" size=40 style="width:400px" />
                                    </div>
                                </div>
                            </div>
                        </div>

                        <br />

                        @*Fecha Nacimiento*@
                        <div class="form-row">
                            <div class="col">
                                <div class="form-inline">
                                    <label><strong>Fecha Nacimiento</strong></label>
                                    <hr />
                                    <div class="input-group">
                                        <InputDate required @bind-Value="Persona.FechaNacimiento" class="form-control" size=40 style="width:400px"/>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <br />

                        @*Balance*@
                        <div class="form-row">
                            <div class="col">
                                <div class="form-inline">
                                    <label><strong>Balance</strong></label>
                                    <hr />
                                    <div class="input-group">
                                        <InputNumber readonly @bind-Value="Balance" class="form-control" size=40 style="width:400px"/>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <br />

                        <div class="card-footer" style="text-align:center">
                            <div class="form-group text-center" display: inline-block>
                                <button type="button" class="btn btn-outline-primary" @onclick="Nuevo"><span class="oi oi-file mr-2"></span>Nuevo</button>
                                &nbsp;&nbsp;
                                <button type="button" class="btn btn-outline-primary" @onclick="Guardar"><span class="oi oi-account-login mr-2"></span>Guardar</button>
                                &nbsp;&nbsp;
                                <button type="button" class="btn btn-outline-primary" @onclick="Eliminar"><span class="oi oi-trash mr-2"></span>Eliminar</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</EditForm>



@code {
    [Parameter]
    public int PersonaId { get; set; }

    private Personas Persona { get; set; }
    public double Balance { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Nuevo();
        Buscar();
    }

    public void Nuevo()
    {
        Persona = new Personas();
        Balance = 0;
        PersonaId = 0;
    }

    public void Buscar()
    {
        if (Persona.PersonaId > 0)
        {
            var encontrado = PersonasBLL.Buscar(Persona.PersonaId);
            var prestamos = PrestamosBLL.GetList(pres => pres.PersonaId == Persona.PersonaId);
            if (encontrado != null)
            {
                this.Persona = encontrado;
                if (prestamos.Count > 0)
                {
                    Balance = 0;
                    foreach (Prestamos prestamo in prestamos)
                    {
                        this.Balance += prestamo.Balance;
                    }
                }
                else
                {
                    this.Balance = 0;
                }
            }
            else
            {
                toast.ShowWarning("Préstamo no Encontrado");
            }
        }
    }

    public void Guardar()
    {
        bool guardo;

        guardo = PersonasBLL.Guardar(Persona);

        if (guardo)
        {
            Nuevo();
            toast.ShowSuccess("Guardado correctamente");
        }
        else
        {
            toast.ShowError("No se pudo guardar.");
        }
    }

    public void Eliminar()
    {
        bool elimino;

        elimino = PersonasBLL.Eliminar(Persona.PersonaId);

        if (elimino)
        {
            Nuevo();
            toast.ShowSuccess("Eliminado correctamente");
        }
        else
        {
            toast.ShowError("No se pudo eliminar.");
        }
    }
}
