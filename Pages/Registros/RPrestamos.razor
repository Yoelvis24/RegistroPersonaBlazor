@page "/Prestamos"

@using BLL
@using Models
@using Blazored.Toast
@using Blazored.Toast.Services

@inject IToastService toast

<EditForm Model="Prestamo" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="card" style="align-self:self-start">

        <div class="card-header">
            <h3>Registro de Personas</h3>
            <style type="text/css">
                label {
                    width: 200px;
                    display: inline-block;
                }
            </style>
        </div>

        <div class="card-body" style="align-self:self-start">
            <form>
                @*PrestamosId*@
                <div class="form-row align-items-lg-start">
                    <div class="col">
                        <div class="form-inline">
                            <label><strong>Id</strong></label>
                            <div class="input-group">
                                <InputNumber @bind-Value="Prestamo.PrestamoId" class="form-control col-4" />
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-toolbar input-group-text" @onclick="Buscar"><span class="oi oi-magnifying-glass mr-2"></span>Buscar</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <br />

                @*PersonaId*@
                <div class="form-row align-items-lg-start">
                    <div class="col">
                        <div class="form-inline">
                            <label><strong>Persona</strong></label>
                            <div class="input-group">
                                <InputSelect @bind-Value="Prestamo.PersonaId" class="form-control col-4">
                                 <option value="0">Selecciona una persona</option>

                                    @foreach (var persona in PersonasBLL.GetList(per => true))
                                    {
                                        <option value="@persona.PersonaId">@persona.Cedula >>> @persona.Nombres</option>
                                    }
                                </InputSelect>
                            </div>
                        </div>
                    </div>
                </div>

                <br />

                @*Concepto*@
                <div class="form-row align-items-lg-start">
                    <div class="col">
                        <div class="form-inline">
                            <label><strong>Concepto</strong></label>
                            <div class="input-group">
                                <InputTextArea @bind-Value="Prestamo.Concepto" class="form-control" />
                            </div>
                        </div>
                    </div>
                </div>

                <br />

                @*Monto*@
                <div class="form-row align-items-lg-start">
                    <div class="col">
                        <div class="form-inline">
                            <label><strong>Monto</strong></label>
                            <div class="input-group">
                                <InputNumber @bind-Value="Prestamo.Monto" class="form-control" />
                            </div>
                        </div>
                    </div>
                </div>

                <br />

                @*Balance*@
                <div class="form-row align-items-lg-start">
                    <div class="col">
                        <div class="form-inline">
                            <label><strong>Balance</strong></label>
                            <div class="input-group">
                                <InputNumber readonly @bind-Value="Prestamo.Balance" class="form-control" />
                            </div>
                        </div>
                    </div>
                </div>

                <br />

                @*Fecha*@
                <div class="form-row align-items-lg-start">
                    <div class="col">
                        <div class="form-inline">
                            <label><strong>Fecha</strong></label>
                            <div class="input-group">
                                <InputDate @bind-Value="Prestamo.Fecha" class="form-control" />
                            </div>
                        </div>
                    </div>
                </div>

                <br />

                <div class="card-footer" style="align-self:self-start">
                    <div class="form-group text-center" display: inline-block>
                        <button type="button" class="btn btn-outline-primary" @onclick="Nuevo"><span class="oi oi-file mr-2"></span>Nuevo</button>
                        &nbsp;&nbsp;
                        <button type="button" class="btn btn-outline-primary" @onclick="Guardar"><span class="oi oi-account-login mr-2"></span>Guardar</button>
                        &nbsp;&nbsp;
                        <button type="button" class="btn btn-outline-primary" @onclick="Eliminar"><span class="oi oi-trash mr-2"></span>Eliminar</button>
                    </div>
                </div>

            </form>
        </div>
    </div>
</EditForm>


@code {
    [Parameter]
    public int PrestamoId { get; set; }

    private Prestamos Prestamo { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Nuevo();
        Buscar();
    }

    public void Nuevo()
    {
        Prestamo = new Prestamos();
    }
    
    public void Buscar()
    {
        if (Prestamo.PrestamoId > 0)
        {
            var encontrado = PrestamosBLL.Buscar(Prestamo.PrestamoId);

            if (encontrado != null)
                this.Prestamo = encontrado;
            else
            {
                toast.ShowWarning("No Encontrado");
            }
        }
    }

    public void Guardar()
    {
        bool guardo;

        guardo = PrestamosBLL.Guardar(Prestamo);

        if (guardo)
        {
            Nuevo();
            toast.ShowSuccess("Guardado correctamente");
        }
        else
        {
            toast.ShowError("No se pudo guardar.");
        }
    }

    public void Eliminar()
    {
        bool elimino;

        elimino = PrestamosBLL.Eliminar(Prestamo.PrestamoId);

        if (elimino)
        {
            Nuevo();
            toast.ShowSuccess("Eliminado correctamente");
        }
        else
        {
            toast.ShowError("No se pudo eliminar.");
        }
    }
}
